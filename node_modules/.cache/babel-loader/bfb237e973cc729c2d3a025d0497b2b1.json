{"ast":null,"code":"import _toConsumableArray from \"/Users/waleed-softaims/Downloads/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/waleed-softaims/Downloads/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport getAirtableDatas from './airtableApi';\nimport urlencode from 'urlencode';\nimport { BASE_URL } from './airtableEndPiont';\nimport { STUDENTS_FIELD_ID } from './airtableEndPiont';\nimport { CLASS_FIELD_ID } from './airtableEndPiont';\n\nvar getStudentDetails = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n    var formular, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formular = urlencode(\"({Name} = '\".concat(name, \"')\"));\n            _context.next = 3;\n            return getAirtableDatas(\"\".concat(BASE_URL, \"/\").concat(STUDENTS_FIELD_ID, \"/?filterByFormula=\").concat(formular));\n\n          case 3:\n            result = _context.sent;\n            localStorage.setItem(\"name\", result.records);\n            return _context.abrupt(\"return\", result.records);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStudentDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getClassDetails = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name) {\n    var classDetails, classIds, arr, result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getStudentDetails(name);\n\n          case 2:\n            classDetails = _context2.sent;\n            classIds = classDetails.map(function (classDetail) {\n              return classDetail.fields.Classes;\n            });\n            arr = [];\n            classIds.forEach(function (classId) {\n              arr = arr.concat(classId);\n            });\n            _context2.next = 8;\n            return getAirtableDatas(\"\".concat(BASE_URL, \"/\").concat(CLASS_FIELD_ID, \"/?filterByFormula=\").concat(filterByFormula(arr)));\n\n          case 8:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result.records.map(function (record) {\n              return {\n                name: record.fields.Name,\n                students: record.fields.Students\n              };\n            }));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getClassDetails(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getStudentsFromClass = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(name) {\n    var results, studentList, studentNames, studentMap;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getClassDetails(name);\n\n          case 2:\n            results = _context3.sent;\n            studentList = [];\n            results.forEach(function (result) {\n              return studentList = [].concat(_toConsumableArray(studentList), _toConsumableArray(result.students));\n            });\n            studentList = _toConsumableArray(Array.from(new Set(studentList)));\n            _context3.next = 8;\n            return getAirtableDatas(\"\".concat(BASE_URL, \"/\").concat(STUDENTS_FIELD_ID, \"/?filterByFormula=\").concat(filterByFormula(studentList)));\n\n          case 8:\n            studentNames = _context3.sent;\n            studentMap = new Map();\n            studentNames.records.forEach(function (student) {\n              studentMap.set(student.id, student.fields.Name);\n            });\n            results.forEach(function (result) {\n              result.students = result.students.map(function (id) {\n                return studentMap.get(id);\n              });\n            });\n            return _context3.abrupt(\"return\", results);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getStudentsFromClass(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar filterByFormula = function filterByFormula(arr) {\n  var formularStr = 'OR(';\n  arr.forEach(function (id, index) {\n    formularStr += \"RECORD_ID() = '\".concat(id, \"'\");\n    formularStr += index < arr.length - 1 ? ', ' : ')';\n  });\n  var formular = urlencode(formularStr);\n  return formular;\n};\n\nexport default getStudentsFromClass;","map":{"version":3,"names":["getAirtableDatas","urlencode","BASE_URL","STUDENTS_FIELD_ID","CLASS_FIELD_ID","getStudentDetails","name","formular","result","localStorage","setItem","records","getClassDetails","classDetails","classIds","map","classDetail","fields","Classes","arr","forEach","classId","concat","filterByFormula","record","Name","students","Students","getStudentsFromClass","results","studentList","Array","from","Set","studentNames","studentMap","Map","student","set","id","get","formularStr","index","length"],"sources":["/Users/waleed-softaims/Downloads/assessment/src/airtable/integration/fetchData.ts"],"sourcesContent":["import getAirtableDatas from './airtableApi'\nimport urlencode from 'urlencode'\nimport { BASE_URL } from './airtableEndPiont'\nimport { STUDENTS_FIELD_ID } from './airtableEndPiont'\nimport { CLASS_FIELD_ID } from './airtableEndPiont'\n\ntype classDetailsProps = {\n\tfields: {\n\t\tClasses: []\n\t}\n}\n\ntype recordType = {\n\trecords: []\n}\n\ntype studentProp = {\n\trecords: {\n\t\tid: string\n\t\tfields: {\n\t\t\tName: string[]\n\t\t}\n\t\t}[]\n}\n\nconst getStudentDetails = async (name: string) => {\n\tconst formular = urlencode(`({Name} = '${name}')`)\n\tconst result = await getAirtableDatas(\n\t\t`${BASE_URL}/${STUDENTS_FIELD_ID}/?filterByFormula=${formular}`,\n\t)\n\tlocalStorage.setItem(\"name\", result.records)\n\treturn result.records\n}\n\nconst getClassDetails = async (name: string) => {\n\tconst classDetails = await getStudentDetails(name)\n\tlet classIds = classDetails.map((classDetail: classDetailsProps) => classDetail.fields.Classes)\n\tlet arr: string[] = []\n\tlet result: recordType\n\n\tclassIds.forEach((classId: []) => {\n\t\tarr = arr.concat(classId)\n\t})\n\n\tresult = await getAirtableDatas(\n\t\t`${BASE_URL}/${CLASS_FIELD_ID}/?filterByFormula=${filterByFormula(arr)}`,\n\t)\n\treturn result.records.map((record: { fields: { Name: string; Students: string[] } }) => ({\n\t\tname: record.fields.Name,\n\t\tstudents: record.fields.Students,\n\t}))\n}\n\nconst getStudentsFromClass = async (name: string) => {\n\tconst results = await getClassDetails(name)\n\tlet studentList: string[] = []\n\tresults.forEach(result => (studentList = [...studentList, ...result.students]))\n\tstudentList = [...Array.from(new Set(studentList))]\n\tconst studentNames: studentProp = await getAirtableDatas(\n\t\t`${BASE_URL}/${STUDENTS_FIELD_ID}/?filterByFormula=${filterByFormula(studentList)}`,\n\t)\n\n\tconst studentMap = new Map()\n\tstudentNames.records.forEach(student=> {\n\t\tstudentMap.set(student.id, student.fields.Name)\n\t})\n\n\tresults.forEach(result => {\n\t\tresult.students = result.students.map(id => studentMap.get(id))\n\t})\n\n\treturn results\n}\n\nconst filterByFormula = (arr: string[]) => {\n\tlet formularStr = 'OR('\n\tarr.forEach((id, index) => {\n\t\tformularStr += `RECORD_ID() = '${id}'`\n\t\tformularStr += index < arr.length - 1 ? ', ' : ')'\n\t})\n\tconst formular = urlencode(formularStr)\n\treturn formular\n}\n\nexport default getStudentsFromClass\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}